# leads/models.py
from django.db import models
from django.core.validators import EmailValidator, RegexValidator
from core.models import TelegramUser, Bot


class LeadBotConfig(models.Model):
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∑–∞—è–≤–æ–∫.
    –ü—Ä–∏–≤—è–∑–∫–∞ –∫ Bot –∏–∑ core.
    """
    bot = models.OneToOneField(
        Bot,
        on_delete=models.CASCADE,
        related_name='lead_config',
        verbose_name='–ë–æ—Ç'
    )
    
    # Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notification_email = models.EmailField(
        max_length=255,
        validators=[EmailValidator()],
        blank=True,
        null=True,
        help_text='Email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö'
    )
    
    # Telegram Admin ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    admin_user_id = models.BigIntegerField(
        blank=True,
        null=True,
        help_text='Telegram User ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤ –±–æ—Ç–∞
    welcome_text = models.TextField(
        default=(
            '–ü—Ä–∏–≤–µ—Ç! üëã\n\n'
            '–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.\n'
            '–í–≤–µ–¥–∏—Ç–µ –û–î–ù–ò–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –≤–∞—à–µ –∏–º—è, –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ, –±—É–¥—å –ª–∞—Å–∫–∞'
        ),
        help_text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ /start'
    )
    
    phone_request_text = models.TextField(
        default=(
            '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∑–∞ —è–∫–∏–º –º–æ–∂–Ω–∞ –∑–≤\'—è–∑–∞—Ç–∏—Å—è –∑ –í–∞–º–∏, –±—É–¥—å –ª–∞—Å–∫–∞ üìû\n\n'
            '–ù–æ–º–µ—Ä —É —Ñ–æ—Ä–º–∞—Ç—ñ +380... –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∏–∂—á–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º"'
        ),
        help_text='–¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    )
    
    email_request_text = models.TextField(
        default='Vlad, —Ü–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∑–≤\'—è–∑–∫—É –∑ –í–∞–º–∏?\n\n–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞',
        help_text='–¢–µ–∫—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∑–∞–ø—Ä–æ—Å–∞ email'
    )
    
    comment_request_text = models.TextField(
        default='Vlad, –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫ üòä\n\n–ë–∞–∂–∞—î—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è, –∫–æ–º–µ–Ω—Ç–∞—Ä —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞',
        help_text='–¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'
    )
    
    success_text = models.TextField(
        default=(
            'Vlad, —Å—É–ø–µ—Ä, –æ—Ç—Ä–∏–º–∞–ª–∏ –í–∞—à—É –∑–∞—è–≤–∫—É üí™üëç\n\n'
            '–ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –∑ –í–∞–º–∏ –∑–≤\'—è–∂–µ—Ç—å—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —ñ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –±—É–¥—å—Ç–µ –Ω–∞ –∑–≤\'—è–∑–∫—Éüòä\n\n'
            '–Ø–∫—â–æ —É –í–∞—Å –±—É–¥–µ –ø–∏—Ç–∞–Ω–Ω—è, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–Ñ –ø–∏—Ç–∞–Ω–Ω—è" —ñ –Ω–∞–ø–∏—à—ñ—Ç—å –π–æ–≥–æ üëá'
        ),
        help_text='–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏'
    )
    
    # –ú–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        db_table = 'lead_bot_configs'
        verbose_name = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Lead Bot'
        verbose_name_plural = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Lead Bot'
        permissions = [
            ('can_view_leads', '–ú–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞—è–≤–∫–∏'),
            ('can_manage_lead_bot', '–ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Lead Bot'),
        ]
    
    def __str__(self):
        return f"Lead Bot Config –¥–ª—è @{self.bot.username}"


class Lead(models.Model):
    """
    –ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.
    """
    STATUS_CHOICES = [
        ('new', '–ù–æ–≤–∞—è'),
        ('in_progress', '–í —Ä–∞–±–æ—Ç–µ'),
        ('completed', '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'),
        ('cancelled', '–û—Ç–º–µ–Ω–µ–Ω–∞'),
    ]
    
    # –°–≤—è–∑—å —Å –±–æ—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    bot = models.ForeignKey(
        Bot,
        on_delete=models.CASCADE,
        related_name='leads',
        verbose_name='–ë–æ—Ç'
    )
    
    user = models.ForeignKey(
        TelegramUser,
        on_delete=models.CASCADE,
        related_name='leads',
        verbose_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    )
    
    # –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    full_name = models.CharField(
        max_length=255,
        verbose_name='–ò–º—è'
    )
    
    phone = models.CharField(
        max_length=20,
        validators=[
            RegexValidator(
                regex=r'^\+380\d{9}$',
                message='–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +380XXXXXXXXX'
            )
        ],
        verbose_name='–¢–µ–ª–µ—Ñ–æ–Ω'
    )
    
    email = models.EmailField(
        max_length=255,
        validators=[EmailValidator()],
        blank=True,
        null=True,
        verbose_name='Email'
    )
    
    comment = models.TextField(
        blank=True,
        null=True,
        verbose_name='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π/–í–æ–ø—Ä–æ—Å'
    )
    
    # –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
    status = models.CharField(
        max_length=20,
        choices=STATUS_CHOICES,
        default='new',
        verbose_name='–°—Ç–∞—Ç—É—Å'
    )
    
    # –ú–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–°–æ–∑–¥–∞–Ω–∞')
    updated_at = models.DateTimeField(auto_now=True, verbose_name='–û–±–Ω–æ–≤–ª–µ–Ω–∞')
    
    # –ú–µ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    email_sent = models.BooleanField(default=False, verbose_name='Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
    telegram_sent = models.BooleanField(default=False, verbose_name='Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    
    class Meta:
        db_table = 'leads'
        verbose_name = '–ó–∞—è–≤–∫–∞'
        verbose_name_plural = '–ó–∞—è–≤–∫–∏'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['-created_at']),
            models.Index(fields=['status']),
            models.Index(fields=['bot', '-created_at']),
        ]
    
    def __str__(self):
        return f"–ó–∞—è–≤–∫–∞ #{self.id} - {self.full_name} ({self.phone})"
